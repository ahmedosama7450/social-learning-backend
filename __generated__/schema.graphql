### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Discussion {
  """list of urls of images, videoes, any other downloadable file e.g pdfs"""
  attachments: [String!]!
  author: User!
  authorId: Int!
  body: String!
  college: Int!
  createdAt: DateTime!
  downvotesCount: Int!
  id: Int!
  university: Int!
  upvotesCount: Int!
  year: Int!
}

type DiscussionComment {
  attachments: [String!]!
  author: User!
  authorId: Int!
  body: String!
  createdAt: DateTime!
  discussion: Discussion!
  discussionId: Int!
  downvotesCount: Int!
  id: Int!
  upvotesCount: Int!
}

type EduOrgs {
  colleges: Json!
  tags: Json!
  universities: Json!
}

type EduOrgsInfo {
  eduOrgs: EduOrgs
  version: Int!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum Locale {
  ARABIC
  ENGLISH
}

type LoginResponse {
  accessToken: String!
}

type Mutation {
  createProfile(profileCreateInput: ProfileCreateInput!): User!

  """
  Create an access token for the user. if the user doesn't exist, a new user is created
  """
  loginWithProvider(code: String!, provider: Provider!): LoginResponse!

  """Logout for web client to clear the auth http-only cookie"""
  logout: Boolean!
}

type Profile {
  bio: String!
  college: Int
  locale: Locale!
  university: Int
  userId: Int!
  year: Int!
}

input ProfileCreateInput {
  avatar: String
  bio: String
  college: Int
  firstName: String
  lastName: String
  locale: Locale
  university: Int
  username: String
  year: Int
}

enum Provider {
  GOOGLE
}

type Query {
  eduOrgsInfo(cachedVersion: Int): EduOrgsInfo!
  me: User!
}

type User {
  avatar: String!
  email: String
  firstName: String!
  followersCount: Int!
  followingCount: Int!
  id: Int!
  isActive: Boolean!
  isVerified: Boolean!
  joinedAt: DateTime!
  lastName: String!
  profile: Profile
  provider: Provider!
  reputation: Int!
  username: String!
}
