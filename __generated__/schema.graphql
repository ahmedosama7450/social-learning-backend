### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

type Discussion {
  author: User!
  authorId: Int!
  body: String!
  college: Int!
  commentsCount: Int!
  createdAt: DateTime!
  downvotesCount: Int!
  id: Int!
  tags: [String!]!
  university: Int!
  upvotesCount: Int!
  year: Int!
}

type DiscussionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [DiscussionEdge!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type DiscussionEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Discussion!
}

type EduOrgs {
  colleges: Json!
  tags: Json!
  universities: Json!
}

type EduOrgsInfo {
  eduOrgs: EduOrgs
  version: Int!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum Locale {
  ARABIC
  ENGLISH
}

type LoginResponse {
  accessToken: String!
}

type Mutation {
  """
  Calling this mutation if profile is already created will result in an error
  """
  createProfile(profileCreateInput: ProfileCreateInput!): User!

  """
  Create an access token for the user + put it in a cookie. if the user doesn't exist, a new user is created
  """
  loginWithProvider(code: String!, provider: Provider!): LoginResponse!

  """Logout for web client to clear the auth http-only cookie"""
  logout: Boolean!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Profile {
  bio: String!
  college: Int!
  locale: Locale!
  university: Int!
  userId: Int!
  year: Int!
}

input ProfileCreateInput {
  """
  This is not a url to the avatar but more of a choice that's determined by the frontend
  """
  avatar: String
  bio: String!
  college: Int!
  firstName: String!
  lastName: String!
  locale: Locale!
  university: Int!
  username: String!
  year: Int!
}

enum Provider {
  GOOGLE
}

type Query {
  discussions(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): DiscussionConnection!

  """
  cachedVersion is compared to the current version to decide if we need to send data back or not. the version is always sent back
  """
  eduOrgsInfo(cachedVersion: Int): EduOrgsInfo!
  me: User!
}

type User {
  """
  This is not a url to the avatar but more of a choice that's determined by the frontend
  """
  avatar: String
  email: String
  firstName: String!
  followersCount: Int!
  followingCount: Int!
  id: Int!

  """isActive is false if the user is banned"""
  isActive: Boolean!
  isVerified: Boolean!
  joinedAt: DateTime!
  lastName: String!
  profile: Profile
  provider: Provider!
  reputation: Int!
  username: String!
}
